{"version":3,"sources":["jQuery.CanvasLoader.min.js"],"names":["$","isValid","value","isNumber","isNaN","isString","length","Number","String","isObject","isPromise","then","dec2hex","hex","parseInt","toString","rgb2hex","matches","trim","match","getOption","name","configs","element","config","i","l","concat","fn","canvasLoader","options","defaults","undefined","uid","collection","this","window","CanvasLoader","trigger","each","overlay","animator","capsule","position","css","id","on","find","appendTo","setShape","setColor","setDiameter","setDensity","setRange","setSpeed","setFPS","show","marginLeft","getDiameter","marginTop","kill","remove","off","Array","prototype","slice","call","arguments","console","error","start","shape","color","diameter","density","range","speed","fps","parseFloat","attr","data","version","jQuery"],"mappings":"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","file":"jQuery.CanvasLoader.min.js","sourcesContent":["/*!\n * jQuery.CanvasLoader\n * jQuery wrapper for heartcodes CanvasLoader\n *\n * @version v3.0.0\n * @link https://github.com/orianda/jQuery.CanvasLoader\n * @author Orianda <orianda@paan.de>\n * @license MIT\n */\n(function ($) {\n    \"use strict\";\n\n    /**\n     * Generate unique ids\n     * @type {Function}\n     */\n    var uid = (function () {\n        var uid = 0;\n        return function () {\n            return uid++;\n        };\n    }());\n\n    /**\n     * Is value an valid one?\n     * @param {*} value\n     * @returns {boolean}\n     */\n    function isValid(value) {\n        return !(typeof value === 'undefined' || value === null || isNumber(value) && isNaN(value) || isString(value) && !value.length);\n    }\n\n    /**\n     * Is value an string\n     * @param {*} value\n     * @returns {boolean}\n     */\n    function isNumber(value) {\n        return typeof value === 'number' || value instanceof Number;\n    }\n\n    /**\n     * Is value an string\n     * @param {*} value\n     * @returns {boolean}\n     */\n    function isString(value) {\n        return typeof value === 'string' || value instanceof String;\n    }\n\n    /**\n     * Is the value an object?\n     * @param {*} value\n     * @returns {boolean}\n     */\n    function isObject(value) {\n        return typeof value === 'object' && value !== null;\n    }\n\n    /**\n     * Is value an promise object?\n     * @param {*} value\n     * @returns {boolean}\n     */\n    function isPromise(value) {\n        return isObject(value) && typeof value.then === 'function';\n    }\n\n    /**\n     * Transforms decimal value to hex value\n     * @param {number|string} value\n     * @returns {string}\n     */\n    function dec2hex(value) {\n        var hex = parseInt(value, 10).toString(16);\n        return hex.length > 1 ? hex : '0' + hex;\n    }\n\n    /**\n     * Transforms rgb color to hex color\n     * @param {string} value\n     * @returns {string}\n     */\n    function rgb2hex(value) {\n        var matches = $.trim(value).match(/\\d+/g);\n        return matches ? '#' + dec2hex(matches[0]) + dec2hex(matches[1]) + dec2hex(matches[2]) : '';\n    }\n\n    /**\n     * Get option of an options set\n     * @param {string} name\n     * @param {Array} configs\n     * @param {jQuery} element\n     * @returns {*}\n     */\n    function getOption(name, configs, element) {\n        var config, value, i, l;\n        configs = configs.concat($.fn.canvasLoader.options.defaults);\n        for (i = 0, l = configs.length; i < l; i++) {\n            config = isObject(configs[i]) ? configs[i] : $.fn.canvasLoader.options[configs[i]];\n            if (config) {\n                value = typeof config[name] === 'function' ? config[name](element) : config[name];\n                if (isValid(value)) {\n                    return value;\n                }\n            }\n        }\n        return undefined;\n    }\n\n    /**\n     * Adds an CanvasLoader overlay to the element\n     * This module takes multiple options arguments. The first is the major one,\n     * if it misses needed properties, then the next options will be searched for.\n     * If the next also misses the required property, then the third will be used and so on.\n     *\n     * @param {Object|string} [options] Options object or composition name\n     * @param {boolean|promise} [options.start] Set to false to prevent autostart or provide an promise object,\n     * to automatically stop the pending when the promise resolves or rejects.\n     * @param {Function|string} [options.shape]\n     * @param {Function|string} [options.color]\n     * @param {Function|number} [options.diameter]\n     * @param {Function|number} [options.density]\n     * @param {Function|number} [options.range]\n     * @param {Function|number} [options.speed]\n     * @param {Function|number} [options.fps]\n     * @param {Object|string} [fallback1] See option argument\n     * @param {Object|string} [fallback2] See option argument\n     * @return {jQuery}\n     */\n    $.fn.canvasLoader = function (options, fallback1, fallback2) {\n        var collection = this;\n\n        if (!window.CanvasLoader) {\n            if (window.console) {\n                window.console.error('CanvasLoader library missing!');\n            }\n            return collection;\n        }\n\n        /**\n         * Destroy existing canvas loader setups\n         */\n        collection.trigger('destroy.canvasLoader');\n\n        /**\n         * Setup loader for each element\n         */\n        collection.each(function () {\n            var capsule = $(this),\n                position = capsule.css('position'),\n                overlay,\n                animator,\n                id = 'canvasLoader' + uid();\n\n            /**\n             * Start canvas loader by event\n             */\n            capsule.on('start.canvasLoader', function () {\n                if (capsule.find('> .canvasLoader').length) {\n                    return;\n                }\n\n                if (position === 'static') {\n                    capsule.css('position', 'relative');\n                }\n\n                overlay = $('<div id=\"' + id + '\" class=\"canvasLoader\"></div>').appendTo(capsule);\n\n                animator = new window.CanvasLoader(id);\n                animator.setShape(getOption('shape', collection.canvasLoader.options, capsule));\n                animator.setColor(getOption('color', collection.canvasLoader.options, capsule));\n                animator.setDiameter(getOption('diameter', collection.canvasLoader.options, capsule));\n                animator.setDensity(getOption('density', collection.canvasLoader.options, capsule));\n                animator.setRange(getOption('range', collection.canvasLoader.options, capsule));\n                animator.setSpeed(getOption('speed', collection.canvasLoader.options, capsule));\n                animator.setFPS(getOption('fps', collection.canvasLoader.options, capsule));\n                animator.show();\n\n                overlay.find('> div').css({\n                    marginLeft: animator.getDiameter() / -2,\n                    marginTop: animator.getDiameter() / -2\n                });\n            });\n\n            /**\n             * Stop canvas loader by event\n             */\n            capsule.on('stop.canvasLoader', function () {\n                if (overlay && animator) {\n                    animator.kill();\n                    overlay.remove();\n                    capsule.css({position: position});\n                    overlay = animator = null;\n                }\n            });\n\n            /**\n             * Cleanup canvas loader instance\n             */\n            capsule.on('destroy.canvasLoader', function () {\n                capsule.trigger('stop.canvasLoader');\n                capsule.off('.canvasLoader');\n            });\n        });\n\n        /**\n         * Overwrite module function in order to change the habits\n         * @param {boolean|promise} on\n         * @returns {jQuery}\n         */\n        collection.canvasLoader = function (on) {\n            if (isPromise(on)) {\n                collection.canvasLoader(true);\n                on.then(function () {\n                    collection.canvasLoader(false);\n                }, function () {\n                    collection.canvasLoader(false);\n                });\n            } else {\n                collection.trigger((on ? 'start' : 'stop') + '.canvasLoader');\n            }\n            return collection;\n        };\n\n        /**\n         * Make options available for manipulations\n         */\n        collection.canvasLoader.options = Array.prototype.slice.call(arguments);\n\n        /**\n         * Initialize canvas loader\n         */\n        return collection.canvasLoader(getOption('start', collection.canvasLoader.options, collection));\n    };\n\n    /**\n     * Namespace for custom defined options compositions\n     * @type {Object}\n     */\n    $.fn.canvasLoader.options = {};\n\n    /**\n     * Modules default options\n     * @type {Object}\n     */\n    $.fn.canvasLoader.options.defaults = {\n        start: true,\n        shape: 'spiral',\n        color: '#000',\n        diameter: 70,\n        density: 70,\n        range: 0.7,\n        speed: 2,\n        fps: 24\n    };\n\n    /**\n     * Options to retrieve the configuration from css properties\n     * @type {Object}\n     */\n    $.fn.canvasLoader.options.css = {\n        shape: function (element) {\n            return element.css('font-family');\n        },\n        color: function (element) {\n            return rgb2hex(element.css('color'));\n        },\n        diameter: function (element) {\n            return parseFloat(element.css('line-height'));\n        },\n        density: function (element) {\n            return parseFloat(element.css('letter-spacing'));\n        },\n        range: function (element) {\n            return parseFloat(element.css('word-spacing'));\n        },\n        speed: function (element) {\n            return parseFloat(element.css('font-size'));\n        },\n        fps: function (element) {\n            return parseFloat(element.css('text-indent'));\n        }\n    };\n\n    /**\n     * Options to retrieve the configuration from data attributes of the element\n     * @type {Object}\n     */\n    $.fn.canvasLoader.options.attr = {\n        shape: function (element) {\n            return element.data('canvas-loader-shape');\n        },\n        color: function (element) {\n            return element.data('canvas-loader-color');\n        },\n        diameter: function (element) {\n            return parseFloat(element.data('canvas-loader-diameter'));\n        },\n        density: function (element) {\n            return parseFloat(element.data('canvas-loader-density'));\n        },\n        range: function (element) {\n            return parseFloat(element.data('canvas-loader-range'));\n        },\n        speed: function (element) {\n            return parseFloat(element.data('canvas-loader-speed'));\n        },\n        fps: function (element) {\n            return parseFloat(element.data('canvas-loader-fps'));\n        }\n    };\n\n    /**\n     * Version of the canvas loader module\n     * @type {string}\n     */\n    $.fn.canvasLoader.version = '{{version}}';\n\n})(jQuery);"],"sourceRoot":"/source/"}